<?php

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function competencies_file_help($route_name, RouteMatchInterface $route_match){
  switch ($route_name) {
    case 'help.page.competencies_file':
      $output = '';
      $output .= '<h3>'.t('About').'</h3>';
      $output .= '<p>'.t('Please send help').'</p>';

      return $output;
  }
}



/*
function hook_ENTITY_TYPE_create()
Acts when creating a new entity of a specific type.
This hook runs after a new entity object has just been instantiated.

https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Entity%21entity.api.php/function/hook_entity_create/8.2.x
*/

/*
function hook_ENTITY_TYPE_insert
Respond to creation of a new entity of a particular type.
This hook runs once the entity has been stored. Note that hook implementations may not alter the stored entity data.

https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Entity%21entity.api.php/function/hook_ENTITY_TYPE_insert/8.2.x
*/

function competencies_file_user_insert($entity){
	/*
	get($field_name)// example : $entity->get('uid')->getValue();
	getFields($include_computed = true)//méthode qui fait planter le serveur, a évité
	id()
	getCreatedTime()
	getUsername()//depreciated
	getAccountName()
	getEmail()
	hasRole($rid)
	getRoles($exclude_locked_roles = false)
	isActive()
	isBlocked()
*/

	kint($entity);
	kint($entity->getCreatedTime());
	kint($entity->getEmail());
	kint($entity->getAccountName());
	kint($entity->getRoles());
	kint($entity->id());
	kint($entity->get('uid')->getValue());

	
	die();
}

