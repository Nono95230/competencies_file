<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\NodeType;
use Drupal\node\Entity\Node;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_help().
 */
function competencies_file_help($route_name, RouteMatchInterface $route_match){
  switch ($route_name) {
    case 'help.page.competencies_file':
      $output = '';
      $output .= '<h3>'.t('About').'</h3>';
      $output .= '<p>'.t('Please send help').'</p>';

      return $output;
  }
}


function competencies_file_user_insert($entity){
	// On créé certaines variables de config
	// (cf. competencies_file.config.yml)
	$config = \Drupal::config('competencies_file.config')->get('hook_entity_type_insert');
  $role = $config['role'];
  $contentType = $config['content_type'];
  $jobTitle = $config['job_title'];
  $contentTitle = $config['content_title'];
  $userId = $entity->id();

	// On vérifie que l'utilisateur possède bien le rôle drupalien
	if (in_array($role, $entity->getRoles())) {

		// On vérifie que le type de contenu "Dossier de compétences" existe bien
		if (NodeType::load($contentType)  != null) {

			// En premier, on créé les contenus Paragraphs,
			// qui seront ensuite liés au contenu Dossier de compétences.
			// Et on retourne la valeur à insérer dans le contenu
			$paraFormattedValue = createParagraph($userId);

			// Puis on créé le contenu Dossier de compétences
      $node = Node::create([
      	'type'=> $contentType,
      	'title' => $contentTitle,
      	'uid' => $userId,
      	'field_competencies_file_jobtitle' => $jobTitle,
      	'field_competencies_file_skill' => $paraFormattedValue
      ]);
    	$node->save();
		}
	}
}


function createParagraph($userId){

	$config = \Drupal::config('competencies_file.config');
	$paraFieldName = $config->get('hook_entity_type_insert.paragraph_type');
	$configParas = $config->get($paraFieldName);
	$paraFormattedValue = [];

	foreach ($configParas as $configPara) {

	  $paragraph = Paragraph::create([
	      'type' => $paraFieldName,
	      'uid' => [
	          'target_id' => $userId
	      ],
	      'field_skill_section' => [
	          'value' => $configPara['skill_section']
	      ],
	      'field_skill_competences' => [
	          'value' => $configPara['skill_competences']
	      ],
	  ]);
	  $paragraph->save();

	  $paraFormattedValue[] = array(
      'target_id' => $paragraph->id(),
      'target_revision_id' => $paragraph->getRevisionId(),
	  );
	}

	return $paraFormattedValue;
}

